---
- name: Instalar paquetes necesarios
  ansible.builtin.apt:
    name:
      - apache2
      - php
      - php-mysql
      - mariadb-server
      - wget
      - unzip
    state: present
    update_cache: yes
  become: yes

- name: Iniciar y habilitar servicios
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - apache2
    - mariadb
  become: yes

- name: Asegurar que la base de datos de WordPress existe
  community.mysql.mysql_db:
    name: "{{ wp_db_name }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  become: yes

- name: Crear usuario de WordPress en MySQL
  community.mysql.mysql_user:
    name: "{{ wp_db_user }}"
    password: "{{ wp_db_password }}"
    priv: "{{ wp_db_name }}.*:ALL"
    host: "localhost"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  become: yes

- name: Descargar WordPress
  ansible.builtin.get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/wordpress.tar.gz

- name: Descomprimir WordPress
  ansible.builtin.unarchive:
    src: /tmp/wordpress.tar.gz
    dest: /var/www/html/
    remote_src: yes
  become: yes

- name: Copiar archivo de configuraci√≥n wp-config.php
  ansible.builtin.template:
    src: wp-config.php.j2
    dest: /var/www/html/wordpress/wp-config.php
  become: yes

- name: Ajustar permisos en /var/www/html
  ansible.builtin.file:
    path: /var/www/html
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
  become: yes
# tasks file for wordpress
